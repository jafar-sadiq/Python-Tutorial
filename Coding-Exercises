# print a number is even or odd

# Input: 10
# Output: Even

# Input: 11
# Output: Odd

n = int(input())

# if divisible by 2, print even
if n == 1:
    print("one")
elif n == 2:
    print("two")
elif n == 3:
    print("three")
else:
    print("Sorry, Give only 1,2,or 3")

print("done.")



----------------------------------------------------------


# print a number is positive/negative
# 10 postive
# -2 negative
# 0 Neither Positive Nor Negative

n = int(input())

if n>0:
    print("Positive")
elif n<0:
    print("Negative")
else:
    print("Neither Positive Nor Negative")


----------------------------------------------------------


# print sum of 2 numbers
# Input1: 3
# Input2: 5
# Output: Sum of numbers 3, 5 is: 8

# num1 = int(input())
# num2 = int(input())

# printf("Sum of numbers %d , %d is: %d", num1, num2, num1+num2)

# print("Sum of numbers %d, %d is: %d" % (num1, num2, num1+num2))

#print("Sum of numbers {}, {} is: {}".format(num1, num2, num1+num2))

#print(f"Sum of numbers {num1}, {num2} is: {num1 + num2}")



----------------------------------------------------------


# print a year is leap or not

year = int(input())

if year%4 != 0:
    print("Not leap year")
else:
    if year%100 != 0:
        print("Leap year")
    else:
        if year%400 == 0:
            print("Leap year")
        else:
            print("Not leap year")
print("Done.")


----------------------------------------------------------

# print a year is leap or not

year = int(input())

if (year%4 == 0 and year%100 != 0):
    print("Leap")
elif year%400 == 0:
    print("Leap")
else:
    print("Not Leap")
print("Done.")


----------------------------------------------------------


# print a year is leap or not

year = int(input())

if (year%4 == 0 and year%100 != 0) or year%400 == 0:
    print("Leap")
else:
    print("Not Leap")
print("Done.")


----------------------------------------------------------



# check a number is prime

n = int(input())
for i in range(2,n):
    if n%i == 0:
        print("Not a prime")
        break
else: # if break didn't invoke, then execute this
    print("Prime")
    
print("Done.")


----------------------------------------------------------


# check a number is prime

n = int(input())
prime = True

for i in range(2,n):
    if n%i == 0:
        prime = False
        break
    
if prime:
    print("Prime")
else:
    print("Not a prime")
    
print("Done.")

----------------------------------------------------------

def is_prime(n):
    for i in range(2,n):
        if n%i == 0:
            return False
    return True


arr = [i for i in range(1,101)]
prime_numbers = []
for n in arr:
    if is_prime(n):
        prime_numbers.append(n)

print(f"Prime numbers are: {prime_numbers}")

-----------------------------------------------------------

class Employee:
    def __init__(self, name, id, designation):
        self.name = name
        self.id = id
        self.designation = designation
    
    def login(self):
        print(f"{self.id} is logged in.")
    
    def logout(self):
        print(f"{self.id} is logged off.")
    
    def print_details(self):
        print(f"Name is {self.name}\nID is {self.id}\nDesignation is {self.designation}")

jhansi = Employee("jhansi", "ABCD", "Software Engineer")
jhansi.login()

raj = Employee("Raj", "XYZ", "General Manager")
raj.login()

-----------------------------------------------------------

class Employee:
    def __init__(self, name, id, designation):
        self.name = name
        self.id = id
        self.designation = designation
    
    def login(self):
        print(f"{self.name} is logged in.")
    
    def logout(self):
        print(f"{self.name} is logged off.")
    
    def print_details(self):
        print(f"Name is {self.name}\nID is {self.id}\nDesignation is {self.designation}")


jhansi = Employee("jhansi", "ABCD", "Software Engineer")
jhansi.print_details()
jhansi.designation = "Technical Architect"
jhansi.print_details()

raj = Employee("Raj", "XYZ", "General Manager")
raj.print_details()

-----------------------------------------------------------

class Animal:
    def __init__(self, name, type, legs):
        self.name = name
        self.type = type
        self.legs = legs
        
    def bark(self):
        print("auuuuuuuuu...")

class Dog(Animal):
    def __init__(self, name, type, legs):
        super().__init__(name, type, legs)
    
    def bark(self):
        print("bhav bhav...")
    
    def get_legs(self):
        print("Legs are: ", self.legs)

dog = Dog("John", "Carnivorous", 4)
dog.bark()
dog.get_legs()

-----------------------------------------------------------
